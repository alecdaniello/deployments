version: "3"

volumes:
    kong_data: {}

services:

  postgres:
    image: postgres:9.6
    restart: always
    container_name: kong-232-postgres
    networks:
      - kong-ee
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: kong


  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   hostname: prometheus
  #   command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - "./prometheus.yml:/etc/prometheus/prometheus.yml"
  #   networks:
  #     - kong-ee

  # statsd-node:
  #   image: kong-docker-statsd-exporter-docker.bintray.io/statsd_exporter:0.3.1
  #   container_name: statsd-node
  #   command: --statsd.mapping-config=/tmp/statsd.rules.yaml
  #   ports:
  #     - "9102:9102"
  #     - "9125:9125/udp"
  #   volumes:
  #     - "./statsd.rules.yaml:/tmp/statsd.rules.yaml"
  #   networks:
  #     - kong-ee
  
# Redis container
  # redis:
  #   image: redis:6.0.1-alpine
  #   container_name: redis-container
  #   networks:
  #     - kong-ee
  #   restart: on-failure
  #   ports:
  #       - "6379:6379"
  #   environment:
  #     REDIS_HOST: redis




      
#Running the migrations here

  kong-migrations:
    image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.3.2.0-alpine
    #image: kong-docker-kong-enterprise-edition-internal-preview-docker.bintray.io/kong-enterprise-edition:2.3.2.0-alpine
    container_name: kong-232-migrations
    command: kong migrations bootstrap
    depends_on:
      - postgres
    environment:
      KONG_DATABASE: postgres
      KONG_PASSWORD: admin
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-232-postgres
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
    links:
      - postgres:postgres
    networks:
      - kong-ee
    restart: on-failure

  kong-ee:
    image: kong-docker-kong-enterprise-edition-docker.bintray.io/kong-enterprise-edition:2.3.2.0-alpine
    #image: kong-docker-kong-enterprise-edition-internal-preview-docker.bintray.io/kong-enterprise-edition:2.3.2.0-alpine
    user: "${KONG_USER:-root}"
    container_name: kong-232
    networks:
      - kong-ee
    depends_on:
      - postgres
      - kong-migrations
    restart: on-failure
    ports:
      - "8005:8005/tcp"
      - "8006:8006/tcp"
      - "8007:8007/tcp"
      - "8008:8008/tcp"
      - "8009:8009/tcp"
    environment:
      KONG_ADMIN_GUI_LISTEN:  0.0.0.0:8007
      KONG_PROXY_LISTEN: 0.0.0.0:8005
      KONG_ADMIN_LISTEN: 0.0.0.0:8006
      KONG_CASSANDRA_CONTACT_POINTS: kong-ee-cassandra
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_LOG_LEVEL: debug
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PORTAL_API_ACCESS_LOG: /dev/stderr
      KONG_PORTAL_API_ERROR_LOG: /dev/stderr
      KONG_ADMIN_GUI_URL: http://localhost:8007
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-232-postgres
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: "off"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_PLUGINS: bundled
      KONG_AUDIT_LOG: "on"

      KONG_NGINX_HTTP_SSL_PROTOCOLS: TLSv1.2
      KONG_SSL_CIPHER_SUITES: custom
      KONG_SSL_CIPHERS: "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256"

      KONG_PASSWORD: admin
      KONG_ENFORCE_RBAC: "on"
      KONG_ADMIN_GUI_AUTH: basic-auth
      #KONG_ADMIN_GUI_AUTH_CONF:  '{"issuer": "https://dev-994001.okta.com/oauth2/default", "client_id": ["0oaq5d9ajjJ4wVmGr356"], "client_secret": ["2YWXH2z_X47cRKd4A-z0Dp7vdeilh-uwjWEb5Hnk"], "consumer_by": ["username","custom_id"], "ssl_verify": false, "consumer_claim": ["email"], "leeway": 60, "redirect_uri": ["http://localhost:8002"], "login_redirect_uri": ["http://localhost:8002"], "logout_methods": ["GET", "DELETE"], "logout_query_arg": "logout", "logout_redirect_uri": ["http://localhost:8002"], "scopes": ["openid","profile","email"], "auth_methods": ["authorization_code"]}'
      #KONG_ADMIN_GUI_AUTH_CONF: '{"anonymous":"","attribute":"CN","base_dn":"cn=users,dc=ldap,dc=mashape,dc=com","bind_dn":"cn=ophelia,cn=users,dc=ldap,dc=mashape,dc=com","ldap_password":"damng00dcoffEE","cache_ttl":2,"header_type":"Basic","keepalive":60000,"ldap_host":"kong15_test-ad-server_1","ldap_port":389,"start_tls":false,"timeout":10000,"verify_ldap_host":true}'
      KONG_ADMIN_GUI_SESSION_CONF: '{"secret":"Y29vbGJlYW5z","cookie_secure":false}'
      KONG_PORTAL_EMAILS_FROM: noreply@konghq.com
      KONG_PORTAL_EMAILS_REPLY_TO: noreply@konghq.com
      #KONG_PORTAL_GUI_USE_SUBDOMAINS: "on"
      KONG_PORTAL_GUI_LISTEN: 0.0.0.0:8008
      KONG_PORTAL_GUI_HOST: localhost:8008
      KONG_PORTAL_GUI_PROTOCOL: http
      KONG_PORTAL_GUI_AUTH: openid-connect
      #KONG_PORTAL_AUTH_CONF: '{"issuer": "https://dev-994001.okta.com/oauth2/default", "client_id": ["0oaq5d9ajjJ4wVmGr356"], "client_secret": ["2YWXH2z_X47cRKd4A-z0Dp7vdeilh-uwjWEb5Hnk"], "consumer_by": ["username","custom_id","id"], "consumer_claim": ["email"], "leeway": 1000, "login_action": "redirect", "login_redirect_uri": ["http://localhost:8003"], "redirect_uri":["http://localhost:8004/auth"], "logout_methods": ["GET","DELETE"], "logout_query_arg": "logout", "logout_redirect_uri": ["http://localhost:8003"], "scopes": ["openid","profile","email"],  "login_redirect_mode": "query", "session_cookie_domain":"localhost"}'
      #KONG_PORTAL_SESSION_CONF: '{"cookie_secure":false,"cookie_name":"portal_session","secret":"changeme","storage":"kong", "cookie_domain":"localhost"}'
      KONG_PORTAL_AUTH_CONF: '{"issuer": "https://login.microsoftonline.com/bf894af0-ef64-44a4-af9c-5b8ab1c4b860/v2.0", "client_id": ["e3e3f7ca-3e02-4137-bcba-1b3ec4fb0460"], "client_secret": ["Thuzues1r8g1wtW3DZjXR~.H58-2~9V~H-"], "consumer_by": ["username","custom_id"], "consumer_claim": ["email"], "leeway": 1000,"login_action": "redirect","redirect_uri":["http://localhost:8004/auth"], "login_redirect_uri": ["http://localhost:8003"], "logout_methods": ["GET"], "logout_query_arg": "logout", "logout_redirect_uri": ["http://localhost:8003"], "scopes": ["openid","email","e3e3f7ca-3e02-4137-bcba-1b3ec4fb0460/.default"], "auth_methods": ["authorization_code", "session"], "verify_parameters": false }'
      KONG_PORTAL_SESSION_CONF: '{ "cookie_name":"portal_session","secret":"passw0rd","storage":"kong","cookie_secure":false}'
      KONG_SMTP_MOCK: "off"
      KONG_SMTP_HOST: smtp.gmail.com
      KONG_SMTP_PORT: 587
      KONG_SMTP_AUTH_TYPE: plain
      KONG_SMTP_STARTTLS: "on"
      KONG_SMTP_USERNAME: kongemailtest@gmail.com
      KONG_SMTP_PASSWORD: jNzjktjjzhzwYiQdpd2jymXV
      KONG_SMTP_ADMIN_EMAILS: noreply@konghq.com

      KONG_NGINX_WORKER_PROCESSES: 1

      KONG_DB_CACHE_WARMUP_ENTITIES: services,plugins,consumers,rbac_role_entities

      # KONG_TRACING: "on"
      # KONG_TRACING_WRITE_ENDPOINT: /tmp/tracelog.txt
      # KONG_TRACING_WRITE_STRATEGY: file
      # KONG_TRACING_TYPE: plugin
      # KONG_GENERATE_TRACE_DETAILS: "on" 

      # uncomment the below lines and comment the above to use prometheus
      #KONG_VITALS_TSDB_ADDRESS: prometheus:9090
      #KONG_VITALS_STATSD_ADDRESS: statsd-node:9125
      #KONG_VITALS_STRATEGY: prometheus # or 'influxdb' or 'prometheus' or 'database'
      
      KONG_PORTAL: "on"
      KONG_VITALS: "on"

networks:
  kong-ee:
